// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelDeskWebApi.Context;

#nullable disable

namespace TravelDeskWebApi.Migrations
{
    [DbContext(typeof(TravelDbContext))]
    [Migration("20240219070624_addedHRTravelAdmin")]
    partial class addedHRTravelAdmin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelDeskWebApi.Model.BookingType", b =>
                {
                    b.Property<int>("BookingTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingTypeId"));

                    b.Property<string>("BookingTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookingTypeId");

                    b.ToTable("BookingTypes");

                    b.HasData(
                        new
                        {
                            BookingTypeId = 1,
                            BookingTypeName = "Air Ticket Only"
                        },
                        new
                        {
                            BookingTypeId = 2,
                            BookingTypeName = "Hotel Only"
                        },
                        new
                        {
                            BookingTypeId = 3,
                            BookingTypeName = "Air Ticket and Hotel Both"
                        });
                });

            modelBuilder.Entity("TravelDeskWebApi.Model.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "IT"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "HR"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "Sales"
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentName = "Accounts"
                        });
                });

            modelBuilder.Entity("TravelDeskWebApi.Model.FlightType", b =>
                {
                    b.Property<int>("FlightTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightTypeId"));

                    b.Property<string>("FlightTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FlightTypeId");

                    b.ToTable("FlightTypes");

                    b.HasData(
                        new
                        {
                            FlightTypeId = 1,
                            FlightTypeName = "Domestic"
                        },
                        new
                        {
                            FlightTypeId = 2,
                            FlightTypeName = "International"
                        });
                });

            modelBuilder.Entity("TravelDeskWebApi.Model.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            City = "Noida",
                            Country = "India"
                        },
                        new
                        {
                            LocationId = 2,
                            City = "Gurugram",
                            Country = "India"
                        },
                        new
                        {
                            LocationId = 3,
                            City = "London",
                            Country = "UK"
                        },
                        new
                        {
                            LocationId = 4,
                            City = "Valletta",
                            Country = "Malta"
                        },
                        new
                        {
                            LocationId = 5,
                            City = "Dubai",
                            Country = "UAE"
                        });
                });

            modelBuilder.Entity("TravelDeskWebApi.Model.MealPreference", b =>
                {
                    b.Property<int>("MealPreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealPreferenceId"));

                    b.Property<string>("MealPreferenceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MealPreferenceId");

                    b.ToTable("MealPreferences");

                    b.HasData(
                        new
                        {
                            MealPreferenceId = 1,
                            MealPreferenceName = "Veg"
                        },
                        new
                        {
                            MealPreferenceId = 2,
                            MealPreferenceName = "Non-Veg"
                        });
                });

            modelBuilder.Entity("TravelDeskWebApi.Model.MealType", b =>
                {
                    b.Property<int>("MealTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealTypeId"));

                    b.Property<string>("MealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MealTypeId");

                    b.ToTable("MealTypes");

                    b.HasData(
                        new
                        {
                            MealTypeId = 1,
                            MealName = "Lunch"
                        },
                        new
                        {
                            MealTypeId = 2,
                            MealName = "Dinner"
                        },
                        new
                        {
                            MealTypeId = 3,
                            MealName = "Lunch and Dinner"
                        });
                });

            modelBuilder.Entity("TravelDeskWebApi.Model.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            ProjectName = "GBS-UK"
                        },
                        new
                        {
                            ProjectId = 2,
                            ProjectName = "GBS-Malta"
                        },
                        new
                        {
                            ProjectId = 3,
                            ProjectName = "GBS-Dubai"
                        },
                        new
                        {
                            ProjectId = 4,
                            ProjectName = "Meta-Apply"
                        });
                });

            modelBuilder.Entity("TravelDeskWebApi.Model.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Employee"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Manager"
                        },
                        new
                        {
                            RoleId = 4,
                            RoleName = "HRTravelAdmin"
                        });
                });

            modelBuilder.Entity("TravelDeskWebApi.Model.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            StatusName = "Pending"
                        },
                        new
                        {
                            StatusId = 2,
                            StatusName = "Accepted"
                        },
                        new
                        {
                            StatusId = 3,
                            StatusName = "Rejected"
                        });
                });

            modelBuilder.Entity("TravelDeskWebApi.Model.TravelRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<string>("AadharNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("BookingTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FlightDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FlightTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("From")
                        .HasColumnType("int");

                    b.Property<int>("HotelLocationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<int?>("MealPreferenceId")
                        .HasColumnType("int");

                    b.Property<int?>("MealTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfDays")
                        .HasColumnType("int");

                    b.Property<string>("PassportNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ReasonForTravelling")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("StatusReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StayDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("To")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RequestId");

                    b.HasIndex("UserId");

                    b.ToTable("TravelRequests");
                });

            modelBuilder.Entity("TravelDeskWebApi.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "Noida",
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 2, 19, 12, 36, 23, 113, DateTimeKind.Local).AddTicks(6581),
                            DepartmentId = 1,
                            Email = "ckkapadiya@geduservices.com",
                            FirstName = "Chirag",
                            IsActive = true,
                            LastName = "Kapadiya",
                            MobileNumber = "8080977727",
                            Password = "Q2hpcmFnQDEyMw==",
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            Address = "Delhi",
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 2, 19, 12, 36, 23, 113, DateTimeKind.Local).AddTicks(6601),
                            DepartmentId = 2,
                            Email = "animesh@gmail.com",
                            FirstName = "Animesh",
                            IsActive = true,
                            LastName = "Pandey",
                            ManagerId = 1,
                            MobileNumber = "9873849999",
                            Password = "QW5pbWVzaCExMjM=",
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 3,
                            Address = "Gurugram",
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 2, 19, 12, 36, 23, 113, DateTimeKind.Local).AddTicks(6611),
                            DepartmentId = 3,
                            Email = "saurav@gmail.com",
                            FirstName = "Saurav",
                            IsActive = true,
                            LastName = "Tandon",
                            ManagerId = 2,
                            MobileNumber = "2378498883",
                            Password = "U2F1cmF2ITEyMzQ=",
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            Address = "Pune",
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 2, 19, 12, 36, 23, 113, DateTimeKind.Local).AddTicks(6622),
                            DepartmentId = 3,
                            Email = "priya@gmail.com",
                            FirstName = "Priya",
                            IsActive = true,
                            LastName = "Jaiswal",
                            ManagerId = 2,
                            MobileNumber = "9876545679",
                            Password = "UHJpeWFAMTIz",
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 5,
                            Address = "Kolkata",
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 2, 19, 12, 36, 23, 113, DateTimeKind.Local).AddTicks(6633),
                            DepartmentId = 1,
                            Email = "abhinav@gmail.com",
                            FirstName = "Abhinav",
                            IsActive = true,
                            LastName = "Deep",
                            ManagerId = 2,
                            MobileNumber = "9878687737",
                            Password = "QWJoaW5hdkAxMjM=",
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("TravelDeskWebApi.Model.TravelRequest", b =>
                {
                    b.HasOne("TravelDeskWebApi.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TravelDeskWebApi.Model.User", b =>
                {
                    b.HasOne("TravelDeskWebApi.Model.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelDeskWebApi.Model.User", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.HasOne("TravelDeskWebApi.Model.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Manager");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TravelDeskWebApi.Model.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TravelDeskWebApi.Model.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
